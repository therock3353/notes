Key Graph Topics to Study:

Graph Representation:
    - Adjacency matrix
    - Adjacency list
    - Edge list

Graph Traversal Algorithms:
    - Depth-First Search (DFS)
    - Breadth-First Search (BFS)

Shortest Path Algorithms:
    - Dijkstra's algorithm
        https://nkugwamarkwilliam.medium.com/dijkstras-shortest-path-algorithm-in-python-6d8f99a9f223
    - Bellman-Ford algorithm
    - Floyd-Warshall algorithm
    - A* search algorithm (basic understanding)

Minimum Spanning Trees:
    - Kruskal's algorithm
    - Prim's algorithm
        https://mathsathome.com/prims-algorithm/

Topological Sorting:
    - Kahn’s algorithm  (in-degrees calculation using BFS)
    - DFS-based topological sorting
      Both methods have same O(N) hence focusing on DFS for now

Cycle Detection:
    - In directed and undirected graphs

Network Flow Algorithms:
    - Ford-Fulkerson method
    - Edmonds-Karp algorithm (BFS implementation of Ford-Fulkerson)
    - Capacity scaling

Graph Connectivity:
    - Strongly connected components (Tarjan's or Kosaraju's algorithm)
    - Bridges and articulation points

Bipartite Graphs:
    - Bipartite matching (Hungarian algorithm)
    - Kőnig’s theorem

Graph Coloring:
    Basic concepts and applications


============================================================================================
============================================================================================
============================================================================================
DFS/BFS
1. Graph has path from Src node to Dest node & what is the path.
2. Print all paths from Src to Dest node.
3. Shortest or Longest path from Src to Dest (Not Dijekstra or anything just pure DFS) **
4. Get number of connected components
5. Is graph connected
6. Number of Islands
7. Is graph cyclic? (undirected)
8. Is graph bi-partite?
9. Spread of infection

9. Dijestra's Algorithm
10. Prim's Algorithm
11. Topological sort

============================================================================================
list of TODO graph problems:
1. Course Schedule
2. Course Schedule 2
3. https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description/
4. https://leetcode.com/problems/evaluate-division/description/
5. https://leetcode.com/problems/detonate-the-maximum-bombs/description/
6. https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/description/
7. https://leetcode.com/problems/clone-graph/description/
8. https://leetcode.com/problems/diameter-of-binary-tree/description/
9. https://leetcode.com/problems/cheapest-flights-within-k-stops/description/
10. https://leetcode.com/problems/possible-bipartition/description/
11. https://leetcode.com/problems/number-of-provinces/description/